{"version":3,"file":"game.js","sources":["webpack:///./src/client/phaser/enemy.js","webpack:///./src/client/phaser/turret.js","webpack:///./src/client/phaser/Bullet.js","webpack:///./src/client/phaser/config.js","webpack:///./src/client/phaser/index.js"],"sourcesContent":["'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('./config');\n\nvar Enemy = new Phaser.Class({\n  Extends: Phaser.GameObjects.Image,\n\n  initialize: function Enemy(scene) {\n    Phaser.GameObjects.Image.call(this, scene, 0, 0, 'sprites', 'enemy');\n\n    this.follower = { t: 0, vec: new Phaser.Math.Vector2() };\n  },\n  startOnPath: function startOnPath(paths) {\n    this.paths = paths;\n    this.path = this.paths[this.player.path];\n    // set the t parameter at the start of the path\n    this.follower.t = this.direction > 0 ? 0 : 1;\n    this.hp = 30;\n\n    // get x and y of the given t point\n    this.path.getPoint(this.follower.t, this.follower.vec);\n\n    // set the x and y of our enemy to the received from the previous step\n    this.setPosition(this.follower.vec.x, this.follower.vec.y);\n  },\n  receiveDamage: function receiveDamage(damage) {\n    this.hp -= damage;\n\n    // if hp drops below 0 we deactivate this enemy\n    if (this.hp <= 0) {\n      this.setActive(false);\n      this.setVisible(false);\n    }\n  },\n  setData: function setData(_ref) {\n    var player = _ref.player,\n        playerToAttack = _ref.playerToAttack,\n        socket = _ref.socket;\n\n    this.player = player;\n    this.playerToAttack = playerToAttack;\n    this.direction = this.player.direction;\n    this.changedPosition = false;\n    this.socket = socket;\n  },\n  setHalfwayPath: function setHalfwayPath() {\n    this.path = this.paths[_config.PLAYER_STATS[this.playerToAttack].path];\n    this.direction = _config.PLAYER_STATS[this.playerToAttack].direction * -1;\n  },\n  update: function update(time, delta) {\n    // move the t point along the path, 0 is the start and 0 is the end\n    this.follower.t += _config.ENEMY_SPEED * this.direction;\n    var newT = this.follower.t;\n\n    if (!this.changedPosition && this.direction === 1 && newT >= 0.5 || this.direction === -1 && newT <= 0.5) {\n      this.setHalfwayPath();\n    }\n    // get the new x and y coordinates in vec\n    this.path.getPoint(this.follower.t, this.follower.vec);\n\n    // update enemy x and y to the newly obtained x and y\n    this.setPosition(this.follower.vec.x, this.follower.vec.y);\n\n    // if we have reached the end of the path, remove the enemy\n    if (this.follower.t > 1 || this.follower.t < 0) {\n      this.setActive(false);\n      this.setVisible(false);\n      this.socket.emit('losePlayerLife', this.playerToAttack);\n    }\n  }\n});\n\nexports.default = Enemy;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client/phaser/enemy.js\n// module id = 1502\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _phaser = require('phaser');\n\nvar _phaser2 = _interopRequireDefault(_phaser);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction getEnemy(enemies, x, y, distance, location) {\n  var enemyUnits = enemies.getChildren();\n  for (var i = 0; i < enemyUnits.length; i++) {\n    if (enemyUnits[i].player.location === location) continue;\n    if (enemyUnits[i].active && _phaser2.default.Math.Distance.Between(x, y, enemyUnits[i].x, enemyUnits[i].y) <= distance) return enemyUnits[i];\n  }\n  return false;\n}\n\nfunction addBullet(bullets, x, y, angle, level) {\n  var bullet = bullets.get();\n  if (bullet) {\n    bullet.fire(x, y, angle, level);\n  }\n}\n\nvar Turret = new _phaser2.default.Class({\n  Extends: _phaser2.default.GameObjects.Image,\n\n  initialize: function Turret(scene) {\n    _phaser2.default.GameObjects.Image.call(this, scene, 0, 0, 'sprites', 'turret');\n    this.nextTic = 0;\n  },\n  setVars: function setVars(_ref) {\n    var enemies = _ref.enemies,\n        bullets = _ref.bullets,\n        location = _ref.location,\n        level = _ref.level,\n        id = _ref.id,\n        text = _ref.text;\n\n    this.location = location;\n    this.enemies = enemies;\n    this.bullets = bullets;\n    this.level = level;\n    this.id = id;\n    this.text = text;\n  },\n  updateLevel: function updateLevel(level) {\n    console.log('updating level to ', level);\n    this.level = level;\n    this.text.setText('level ' + this.level);\n  },\n\n  // we will place the turret according to the grid\n  place: function place(i, j) {\n    this.y = i * 100 + 100 / 2 + 100;\n    this.x = j * 100 + 100 / 2 + 100;\n    this.text.setX(this.x - 30);\n    this.text.setY(this.y + 32);\n  },\n  fire: function fire() {\n    var enemy = getEnemy(this.enemies, this.x, this.y, 200, this.location);\n    if (enemy) {\n      var angle = _phaser2.default.Math.Angle.Between(this.x, this.y, enemy.x, enemy.y);\n      addBullet(this.bullets, this.x, this.y, angle, this.level);\n      this.angle = (angle + Math.PI / 2) * _phaser2.default.Math.RAD_TO_DEG;\n    }\n  },\n  update: function update(time, delta) {\n    // time to shoot\n    if (time > this.nextTic) {\n      this.fire();\n      this.nextTic = time + 1000;\n    }\n  }\n});\n\nexports.default = Turret;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client/phaser/turret.js\n// module id = 1503\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _config = require('./config');\n\nvar Bullet = Phaser.Class({\n  Extends: Phaser.GameObjects.Image,\n\n  initialize: function Bullet(scene) {\n    Phaser.GameObjects.Image.call(this, scene, 0, 0, 'bullet');\n\n    this.dx = 0;\n    this.dy = 0;\n    this.lifespan = 0;\n\n    this.speed = Phaser.Math.GetSpeed(600, 1);\n  },\n\n  fire: function fire(x, y, angle, level) {\n    this.level = level;\n    this.setActive(true);\n    this.setVisible(true);\n\n    //  Bullets fire from the middle of the screen to the given x/y\n    this.setPosition(x, y);\n\n    //  we don't need to rotate the bullets as they are round\n    //  this.setRotation(angle);\n\n    this.dx = Math.cos(angle);\n    this.dy = Math.sin(angle);\n\n    this.lifespan = 1000;\n  },\n  damage: function damage() {\n    var damage = _config.BULLET_DAMAGE * Math.min(this.level, 4);\n    console.log('firing with damage', damage);\n    return damage;\n  },\n\n  update: function update(time, delta) {\n    this.lifespan -= delta;\n\n    this.x += this.dx * (this.speed * delta);\n    this.y += this.dy * (this.speed * delta);\n\n    if (this.lifespan <= 0) {\n      this.setActive(false);\n      this.setVisible(false);\n    }\n  }\n});\n\nexports.default = Bullet;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client/phaser/Bullet.js\n// module id = 1504\n// module chunks = 1","'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar MAP = exports.MAP = [[0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0], [0, 0, 0, 0, 0, 0, 0, 0, 0, 0]];\nvar BULLET_DAMAGE = exports.BULLET_DAMAGE = 10;\nvar ENEMY_SPEED = exports.ENEMY_SPEED = 15 / 10000;\nvar PLAYER_STATS = exports.PLAYER_STATS = {\n  1: {\n    color: '#4286f4',\n    lives: 20,\n    path: 'y',\n    direction: 1,\n    initialStart: [500, 0],\n    turretCount: 0,\n    turretPlacement: {\n      1: [4, 0],\n      2: [5, 0],\n      3: [4, 1],\n      4: [5, 1]\n    }\n  },\n  2: {\n    color: '#4286f4',\n    lives: 20,\n    path: 'x',\n    direction: -1,\n    initialStart: [1000, 500],\n    turretCount: 0,\n    turretPlacement: {\n      1: [9, 4],\n      2: [9, 5],\n      3: [8, 4],\n      4: [8, 5]\n    }\n  },\n  3: {\n    color: '#4286f4',\n    lives: 20,\n    path: 'y',\n    direction: -1,\n    initialStart: [500, 1000],\n    turretCount: 0,\n    turretPlacement: {\n      1: [4, 9],\n      2: [5, 9],\n      3: [4, 8],\n      4: [5, 8]\n    }\n  },\n  4: {\n    color: '#4286f4',\n    lives: 20,\n    path: 'x',\n    direction: 1,\n    initialStart: [0, 500],\n    turretCount: 0,\n    turretPlacement: {\n      1: [0, 4],\n      2: [0, 5],\n      3: [1, 4],\n      4: [1, 5]\n    }\n  }\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client/phaser/config.js\n// module id = 320\n// module chunks = 1","'use strict';\n\nvar _phaser = require('phaser');\n\nvar _phaser2 = _interopRequireDefault(_phaser);\n\nvar _enemy = require('./enemy');\n\nvar _enemy2 = _interopRequireDefault(_enemy);\n\nvar _turret = require('./turret');\n\nvar _turret2 = _interopRequireDefault(_turret);\n\nvar _Bullet = require('./Bullet');\n\nvar _Bullet2 = _interopRequireDefault(_Bullet);\n\nvar _config = require('./config');\n\nvar _socket = require('socket.io-client');\n\nvar _socket2 = _interopRequireDefault(_socket);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar config = {\n  type: _phaser2.default.AUTO,\n  parent: 'content',\n  width: 1200,\n  height: 1200,\n  physics: {\n    default: 'arcade'\n  },\n  scene: {\n    key: 'main',\n    preload: preload,\n    create: create,\n    update: update\n  }\n};\n\nvar game = new _phaser2.default.Game(config);\n\nvar players = {};\nvar playerTexts = {};\nvar enemies;\nvar turrets;\nvar bullets;\nvar paths = {};\nvar socket;\nvar turretTracker = {};\n\nfunction preload() {\n  // load the game assets â€“ enemy and turret atlas\n  this.load.atlas('sprites', 'assets/spritesheet.png', 'assets/spritesheet.json');\n  this.load.image('bullet', 'assets/bullet.png');\n}\n\nfunction create() {\n  var graphics = this.add.graphics();\n  drawGrid(graphics);\n  // this graphics element is only for visualization,\n  // its not related to our path\n  var graphics = this.add.graphics();\n\n  // the path for our enemies\n  // parameters are the start x and y of our path\n  paths['y'] = this.add.path(600, 100);\n  paths['y'].lineTo(600, 1100);\n  paths['x'] = this.add.path(100, 600);\n  paths['x'].lineTo(1100, 600);\n\n  graphics.lineStyle(3, 0xffffff, 1);\n  // visualize the path\n  paths['x'].draw(graphics);\n  paths['y'].draw(graphics);\n\n  enemies = this.physics.add.group({ classType: _enemy2.default, runChildUpdate: true });\n  turrets = this.add.group({ classType: _turret2.default, runChildUpdate: true });\n  bullets = this.physics.add.group({ classType: _Bullet2.default, runChildUpdate: true });\n  this.physics.add.overlap(enemies, bullets, damageEnemy);\n\n  setPlayerTexts(this);\n  socketListeners();\n}\n\nfunction update(time, delta) {}\n\nfunction drawGrid(graphics) {\n  graphics.lineStyle(1, 0xffffff, 0.8);\n  for (var i = 0; i < 12; i++) {\n    graphics.moveTo(100, i * 100 + 100);\n    graphics.lineTo(1100, i * 100 + 100);\n  }\n  for (var j = 1; j < 12; j++) {\n    graphics.moveTo(j * 100, 100);\n    graphics.lineTo(j * 100, 1100);\n  }\n  graphics.strokePath();\n}\n\nfunction placeTurret(playerId, turretCount, level, id) {\n  var turret = turrets.get();\n  turretTracker[id] = turret;\n  if (turret) {\n    var location = players[playerId].location;\n\n    var j = _config.PLAYER_STATS[location].turretPlacement[turretCount][0];\n    var i = _config.PLAYER_STATS[location].turretPlacement[turretCount][1];\n    var text = game.scene.scenes[0].add.text(0, 0, 'Level 1', {\n      fontSize: '15px',\n      fill: '#ffffff'\n    });\n    turret.setActive(true);\n    turret.setVisible(true);\n    turret.setVars({ enemies: enemies, bullets: bullets, location: location, level: level, id: id, text: text });\n    turret.place(i, j);\n    console.log('turretPlaced');\n  }\n}\n\nfunction damageEnemy(enemy, bullet) {\n  // only if both enemy and bullet are alive\n  if (enemy.active === true && bullet.active === true) {\n    // we remove the bullet right away\n    bullet.setActive(false);\n    bullet.setVisible(false);\n\n    // decrease the enemy hp with BULLET_DAMAGE\n    enemy.receiveDamage(bullet.damage());\n  }\n}\n\nfunction setPlayerTexts(gameObj) {\n  var text = gameObj.add.text(480, 50, 'Player: 1, Lives: 20', {\n    fontSize: '20px'\n  });\n  playerTexts[1] = text;\n  text = gameObj.add.text(1150, 500, 'Player: 2, Lives: 20', {\n    fontSize: '20px'\n  });\n  text.angle = 90;\n  playerTexts[2] = text;\n  text = gameObj.add.text(480, 1150, 'Player: 3, Lives: 20', {\n    fontSize: '20px'\n  });\n  playerTexts[3] = text;\n  text = gameObj.add.text(50, 700, 'Player: 4, Lives: 20', {\n    fontSize: '20px'\n  });\n  text.angle = 270;\n  playerTexts[4] = text;\n}\n\nfunction socketListeners() {\n  var location = window.location.origin.includes('localhost') ? 'http://localhost:8080' : window.location.origin;\n  socket = (0, _socket2.default)(location);\n  // socket.emit('newPlayer');\n  socket.on('updatePlayer', function (_ref) {\n    var player = _ref.player,\n        playerId = _ref.playerId;\n\n    players[playerId] = player;\n    console.log(players);\n  });\n\n  socket.on('userCreateEnemy', function (_ref2) {\n    var playerId = _ref2.playerId,\n        playerToAttack = _ref2.playerToAttack;\n\n    console.log('creating enemy for player', playerToAttack);\n    var enemy = enemies.get();\n    if (enemy) {\n      enemy.setActive(true);\n      enemy.setVisible(true);\n      // place the enemy at the start of the path\n      enemy.setData({\n        player: players[playerId],\n        playerToAttack: playerToAttack,\n        playerId: playerId,\n        socket: socket\n      });\n      enemy.startOnPath(paths);\n    }\n  });\n\n  socket.on('userBuildTurret', function (_ref3) {\n    var playerId = _ref3.playerId,\n        turretCount = _ref3.turretCount,\n        turretId = _ref3.turretId,\n        level = _ref3.level;\n\n    players[playerId].turretCount;\n    placeTurret(playerId, turretCount, level, turretId);\n  });\n\n  socket.on('userUpdateTurret', function (_ref4) {\n    var level = _ref4.level,\n        turretId = _ref4.turretId;\n\n    turretTracker[turretId].updateLevel(level);\n  });\n\n  socket.on('updateLosePlayerLife', function (_ref5) {\n    var lives = _ref5.lives,\n        location = _ref5.location;\n\n    var newText = 'Player: ' + location + ', Lives: ' + lives;\n    playerTexts[location].setText(newText);\n  });\n\n  socket.on('victory', function (message) {\n    alert(message);\n  });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./src/client/phaser/index.js\n// module id = 821\n// module chunks = 1"],"mappings":";;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC5EA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AChFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACxDA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;;;;;ACjsourceRoot":""}